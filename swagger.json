{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "Visma eAccounting API V2"
  },
  "host": "eaccountingapi-sandbox.test.vismaonline.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "\/v2\/accountbalances\/{date}": {
      "get": {
        "tags": [
          "AccountBalanceV2"
        ],
        "summary": "Get Account balance on a specific date (yyyy-MM-dd). Filter to include accounts where balance is 0.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountBalanceV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Format: yyyy-MM-dd",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[AccountBalanceAPI]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/accountbalances\/{accountNumber}\/{date}": {
      "get": {
        "tags": [
          "AccountBalanceV2"
        ],
        "summary": "Get Account Balance on a specific account and date.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountBalanceV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "path",
            "description": "Format: yyyy-MM-dd",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AccountBalanceAPI"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/accounts": {
      "get": {
        "tags": [
          "AccountsV2"
        ],
        "summary": "Get a list of accounts from all fiscalyears",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[AccountApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "AccountsV2"
        ],
        "summary": "Add account",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "apiAccount",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/AccountApi"
            }
          },
          {
            "name": "useDefaultAccountType",
            "in": "query",
            "description": "If true, eAccounting will provide the standard account type. \r\n            If false, you have to provide your own, can be found at \/v2\/accounttypes. \r\n            Account types can only be set on dutch companies.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AccountApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/accounts\/standardaccounts": {
      "get": {
        "tags": [
          "AccountsV2"
        ],
        "summary": "Get a list of the predefined standard accounts for dutch companies. This endpoint is only available in the Netherlands.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[StandardAccountApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/accounts\/{fiscalyearId}": {
      "get": {
        "tags": [
          "AccountsV2"
        ],
        "summary": "Get a list of accounts for a spcific fiscalyear",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[AccountApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/accounts\/{fiscalyearId}\/{accountNumber}": {
      "get": {
        "tags": [
          "AccountsV2"
        ],
        "summary": "Get a single account by account number",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AccountApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "AccountsV2"
        ],
        "summary": "Replaces a account in a given fiscalyear",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "accountNumber",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "replacedAccount",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/AccountApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AccountApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/accountTypes": {
      "get": {
        "tags": [
          "AccountTypesV2"
        ],
        "summary": "Gets the default account types. This is applicable on all countries but most relevant for the Netherlands.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AccountTypesV2_GetDefaultAccountTypes",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[AccountTypesAPI]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/allocationperiods": {
      "get": {
        "tags": [
          "AllocationPeriodsV2"
        ],
        "summary": "Get allocation periods.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping<\/b><\/p>",
        "operationId": "AllocationPeriodsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[AllocationPeriodApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "AllocationPeriodsV2"
        ],
        "summary": "Add allocation periods for voucher or supplier invoice.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping<\/b><\/p>",
        "operationId": "AllocationPeriodsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "allocationPlans",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/AllocationPlan"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AllocationPeriodApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/allocationperiods\/{allocationPeriodId}": {
      "get": {
        "tags": [
          "AllocationPeriodsV2"
        ],
        "summary": "Get single allocation period.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping<\/b><\/p>",
        "operationId": "AllocationPeriodsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "allocationPeriodId",
            "in": "path",
            "description": "Id of the requsted allocation period.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AllocationPeriodApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/approval\/vatreport\/{id}": {
      "put": {
        "tags": [
          "ApprovalV2"
        ],
        "summary": "Update the approval status of a vat report",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "ApprovalV2_ApproveVatReport",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "approvalModel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ApprovalApi"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the vat report",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/VatReportApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/approval\/supplierinvoice\/{id}": {
      "put": {
        "tags": [
          "ApprovalV2"
        ],
        "summary": "Update the approval status of a invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "ApprovalV2_ApproveInvoice",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "approvalModel",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ApprovalApi"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the invoice draft",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/articleaccountcodings": {
      "get": {
        "tags": [
          "ArticleAccountCodingsV2"
        ],
        "summary": "Get a list of article account codings. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "ArticleAccountCodingsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[ArticleAccountCodingAPI]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/articleaccountcodings\/{articleAccountCodingId}": {
      "get": {
        "tags": [
          "ArticleAccountCodingsV2"
        ],
        "summary": "Get a single article account coding. Vat rates are on present UTC time. Specify date (yyyy-MM-dd) to get for specific date.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "ArticleAccountCodingsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "articleAccountCodingId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleAccountCodingAPI"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/articlelabels": {
      "get": {
        "tags": [
          "ArticleLabelsV2"
        ],
        "summary": "Gets articlelabels.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "ArticleLabelsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[ArticleLabelApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ArticleLabelsV2"
        ],
        "summary": "Create an articlelabel.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "ArticleLabelsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fromArticleLabel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ArticleLabelApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleLabelApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/articlelabels\/{articleLabelId}": {
      "get": {
        "tags": [
          "ArticleLabelsV2"
        ],
        "summary": "Gets an articlelabel by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "ArticleLabelsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "articleLabelId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleLabelApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ArticleLabelsV2"
        ],
        "summary": "Replace content of an articlelabel.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "ArticleLabelsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "articleLabelId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fromArticleLabel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ArticleLabelApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleLabelApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ArticleLabelsV2"
        ],
        "summary": "Deletes an aticlelabel.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "ArticleLabelsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "articleLabelId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleLabelApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/articles": {
      "get": {
        "tags": [
          "ArticlesV2"
        ],
        "summary": "Gets articles.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "ArticlesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "showPricesWithTwoDecimals",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[ArticleApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ArticlesV2"
        ],
        "summary": "Create a single article.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "ArticlesV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "article",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ArticleApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/articles\/{articleId}": {
      "get": {
        "tags": [
          "ArticlesV2"
        ],
        "summary": "Gets an article by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "ArticlesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "showPricesWithTwoDecimals",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ArticlesV2"
        ],
        "summary": "Replace the data in an article.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "ArticlesV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "article",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ArticleApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ArticleApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/attachmentlinks": {
      "post": {
        "tags": [
          "AttachmentLinksV2"
        ],
        "summary": "Create a new links between a document and a set of attachments.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AttachmentLinksV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachmentLinks",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/AttachmentLinkApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AttachmentLinkApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/attachmentlinks\/{attachmentId}": {
      "delete": {
        "tags": [
          "AttachmentLinksV2"
        ],
        "summary": "Delete the link to an attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:purchase<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AttachmentLinksV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/attachments": {
      "get": {
        "tags": [
          "AttachmentsV2"
        ],
        "summary": "Fetch attachments.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AttachmentsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "includeMatched",
            "in": "query",
            "description": "Default value: true. When set to false the endpoint returns just the unmatched attachments.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[AttachmentResultApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "AttachmentsV2"
        ],
        "summary": "Create a new attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AttachmentsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "postedAttachment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/AttachmentUploadApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AttachmentResultApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/attachments\/{attachmentId}": {
      "get": {
        "tags": [
          "AttachmentsV2"
        ],
        "summary": "Get a specific attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AttachmentsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/AttachmentResultApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "AttachmentsV2"
        ],
        "summary": "Delete an attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "AttachmentsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/bankaccounts": {
      "get": {
        "tags": [
          "BankAccountsV2"
        ],
        "summary": "Get bank accounts.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "BankAccountsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[BankAccountApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "BankAccountsV2"
        ],
        "summary": "Add a bank account.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "BankAccountsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "bankAccount",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/BankAccountApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/BankAccountApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/bankaccounts\/{bankAccountId}": {
      "get": {
        "tags": [
          "BankAccountsV2"
        ],
        "summary": "Get a specific bank account.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "BankAccountsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "description": "Id of the requsted bank account.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/BankAccountApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "BankAccountsV2"
        ],
        "summary": "Replace the data in a bank account.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "BankAccountsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "bankAccountChanges",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/BankAccountApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/BankAccountApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "BankAccountsV2"
        ],
        "summary": "Delete a bank account.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "BankAccountsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/banks": {
      "get": {
        "tags": [
          "BankV2"
        ],
        "summary": "Get banks.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "BankV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[BankApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/companysettings": {
      "get": {
        "tags": [
          "CompanySettingsV2"
        ],
        "summary": "Get company settings.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "CompanySettingsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CompanySettingsApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CompanySettingsV2"
        ],
        "summary": "Replace company settings.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "CompanySettingsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "companySettings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CompanySettingsApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CompanySettingsApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/costcenteritems\/{itemId}": {
      "get": {
        "tags": [
          "CostCenterItemsV2"
        ],
        "summary": "Get a specific CostCenterItem.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "CostCenterItemsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CostCenterItemApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/costcenteritems": {
      "post": {
        "tags": [
          "CostCenterItemsV2"
        ],
        "summary": "Create a single CostCenterItem.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "CostCenterItemsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "costCenterItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CostCenterItemApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CostCenterItemApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/costcenteritems\/{costCenterItemId}": {
      "put": {
        "tags": [
          "CostCenterItemsV2"
        ],
        "summary": "Replace the data in an CostCenterItem.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "CostCenterItemsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "costCenterItemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "costCenterItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CostCenterItemApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CostCenterItemApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/costcenters": {
      "get": {
        "tags": [
          "CostCentersV2"
        ],
        "summary": "Get a list of Cost Centers",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "CostCentersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CostCenterApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/costcenters\/{id}": {
      "put": {
        "tags": [
          "CostCentersV2"
        ],
        "summary": "Replace content in a cost center.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "CostCentersV2_Get",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "costCenter",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CostCenterApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CostCenterApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/countries": {
      "get": {
        "tags": [
          "CountriesV2"
        ],
        "summary": "Get a list of Countries.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CountriesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CountryApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/countries\/{countrycode}": {
      "get": {
        "tags": [
          "CountriesV2"
        ],
        "summary": "Get a singel country.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CountriesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "countrycode",
            "in": "path",
            "description": "Two letter code of requested country.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CountryApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/currencies": {
      "get": {
        "tags": [
          "CurrenciesV2"
        ],
        "summary": "Get a list of Currencies",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "CurrenciesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CurrencyApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoicedrafts": {
      "get": {
        "tags": [
          "CustomerInvoiceDraftsV2"
        ],
        "summary": "Get all customer invoice drafts.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoiceDraftsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CustomerInvoiceDraftApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomerInvoiceDraftsV2"
        ],
        "summary": "Create a single customer invoice draft.",
        "description": "ReversedConstructionServicesVatFree attribute on a CustomerInvoiceDraftRow shall only be used for articels with reverse VAT charge.\r\nFor other VAT free articles ReversedConstructionServicesVatFree shall be set to 'false'.<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoiceDraftsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceDraftApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceDraftApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoicedrafts\/{invoiceDraftId}": {
      "get": {
        "tags": [
          "CustomerInvoiceDraftsV2"
        ],
        "summary": "Gets a customer invoice draft by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoiceDraftsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "invoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceDraftApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoicedrafts\/{customerInvoiceDraftId}": {
      "put": {
        "tags": [
          "CustomerInvoiceDraftsV2"
        ],
        "summary": "Replace the data in a customer invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoiceDraftsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "customerInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceDraftApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceDraftApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CustomerInvoiceDraftsV2"
        ],
        "summary": "Delete a customer invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoiceDraftsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoicedrafts\/{customerInvoiceDraftId}\/convert": {
      "post": {
        "tags": [
          "CustomerInvoiceDraftsV2"
        ],
        "summary": "Experimental Endpoint! This might be subject to changes. Converts a CustomerInvoiceDraft to a CustomerInvoice.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoiceDraftsV2_ConvertToInvoice",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraftId",
            "in": "path",
            "description": "The customer Invoice Draft Id.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "invoiceValidations",
            "in": "body",
            "description": "Optional set of properties to validate. Ignore the properties you do not wish to validate.",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceDraftValidationApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoices": {
      "get": {
        "tags": [
          "CustomerInvoicesV2"
        ],
        "summary": "Get all customer invoices.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoicesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "modifiedSinceUtc",
            "in": "query",
            "description": "Used to get the invoices which have been modified since a prompted date",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CustomerInvoiceApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomerInvoicesV2"
        ],
        "summary": "Create a single customer invoice.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoicesV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "invoiceApi",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceApi"
            }
          },
          {
            "name": "rotReducedAutomaticDistribution",
            "in": "query",
            "description": "Used for the automatic distribution per person of the rot reduced invoicing amount.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/InvoiceUrlApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoices\/{invoiceId}": {
      "get": {
        "tags": [
          "CustomerInvoicesV2"
        ],
        "summary": "Gets a customer invoice with a specific id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoicesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerInvoiceApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoices\/{invoiceId}\/pdf": {
      "get": {
        "tags": [
          "CustomerInvoicesV2"
        ],
        "summary": "Gets a customer invoice in Portable Document Format (PDF).",
        "description": "As invoices are generated at request time, if not generated before, this endpoint sometimes has higher than average response time.<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoicesV2_GetPdfReplacement",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/InvoiceUrlApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerinvoices\/{invoiceId}\/payments": {
      "post": {
        "tags": [
          "CustomerInvoicesV2"
        ],
        "summary": "Post a payment towards a bookkept customer invoice. Use factoring fee and account number in order to pay with factoring",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerInvoicesV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoicePayment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/InvoicePaymentApi"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/InvoicePaymentApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerlabels": {
      "get": {
        "tags": [
          "CustomerLabelsV2"
        ],
        "summary": "Gets customerlabels.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "CustomerLabelsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CustomerLabelApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomerLabelsV2"
        ],
        "summary": "Create an customerlabel.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "CustomerLabelsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fromCustomerLabel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerLabelApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLabelApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerlabels\/{customerLabelId}": {
      "get": {
        "tags": [
          "CustomerLabelsV2"
        ],
        "summary": "Gets an customerlabel by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "CustomerLabelsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerLabelId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLabelApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CustomerLabelsV2"
        ],
        "summary": "Replace content of an articlelabel.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "CustomerLabelsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerLabelId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "fromCustomerLabel",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerLabelApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLabelApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CustomerLabelsV2"
        ],
        "summary": "Deletes an aticlelabel.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "CustomerLabelsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerLabelId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLabelApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerledgeritems": {
      "get": {
        "tags": [
          "CustomerLedgerItemsV2"
        ],
        "summary": "Get a list of customer ledger items.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerLedgerItemsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CustomerLedgerItemApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomerLedgerItemsV2"
        ],
        "summary": "Create a customer ledger item.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerLedgerItemsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerLedgerItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerLedgerItemApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLedgerItemApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerledgeritems\/{customerLedgerItemId}": {
      "get": {
        "tags": [
          "CustomerLedgerItemsV2"
        ],
        "summary": "Get a customer ledger item by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerLedgerItemsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerLedgerItemId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLedgerItemApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customerledgeritems\/customerledgeritemswithvoucher": {
      "post": {
        "tags": [
          "CustomerLedgerItemsV2"
        ],
        "summary": "Create a customer ledger item and a voucher included.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomerLedgerItemsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerLedgerItem",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerLedgerItemWithVoucherApi"
            }
          },
          {
            "name": "useAutomaticVatCalculation",
            "in": "query",
            "description": "Default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "Default value: True. Set to false and override default vatcodes on all rows in the request.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDefaultVoucherSeries",
            "in": "query",
            "description": "Default value: True. Set to false and override default voucher series (alphabetic character before number).",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerLedgerItemWithVoucherApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customers": {
      "get": {
        "tags": [
          "CustomersV2"
        ],
        "summary": "Get customers.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[CustomerApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "CustomersV2"
        ],
        "summary": "Add a customer.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomersV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/customers\/{customerId}": {
      "get": {
        "tags": [
          "CustomersV2"
        ],
        "summary": "Get a specific customer.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id of the requsted customer.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "CustomersV2"
        ],
        "summary": "Replace the data in a customer.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomersV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "updatedCustomer",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/CustomerApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/CustomerApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "CustomersV2"
        ],
        "summary": "Delete a customer.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "CustomersV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/deliverymethods": {
      "get": {
        "tags": [
          "DeliveryMethodsV2"
        ],
        "summary": "Get delivery methods.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "DeliveryMethodsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[DeliveryMethodApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/deliverymethods\/{deliveryMethodId}": {
      "get": {
        "tags": [
          "DeliveryMethodsV2"
        ],
        "summary": "Get a delivery method.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "DeliveryMethodsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "deliveryMethodId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/DeliveryMethodApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/deliveryterms": {
      "get": {
        "tags": [
          "DeliveryTermsV2"
        ],
        "summary": "Get a list of delivery terms",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "DeliveryTermsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[DeliveryTermApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/deliveryterms\/{deliveryTermId}": {
      "get": {
        "tags": [
          "DeliveryTermsV2"
        ],
        "summary": "Get single delivery term",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "DeliveryTermsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "deliveryTermId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/DeliveryTermApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/documents\/{id}": {
      "get": {
        "tags": [
          "DocumentsV2"
        ],
        "summary": "Get a vat report pdf by document id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "DocumentsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/DocumentApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/fiscalyears": {
      "get": {
        "tags": [
          "FiscalYearsV2"
        ],
        "summary": "Get a list of fiscal years.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "FiscalYearsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[FiscalYearApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "FiscalYearsV2"
        ],
        "summary": "Create a fiscal year.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "FiscalYearsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fiscalYear",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/FiscalYearApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/FiscalYearApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/fiscalyears\/{id}": {
      "get": {
        "tags": [
          "FiscalYearsV2"
        ],
        "summary": "Get a singel fiscal year.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "FiscalYearsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of requested fiscal year.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/FiscalYearApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/fiscalyears\/openingbalances": {
      "get": {
        "tags": [
          "FiscalYearsV2"
        ],
        "summary": "Gets the opening balances of the first fiscal year. If you want balances of following years, use the GET \/accountbalances instead.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "FiscalYearsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[OpeningBalancesApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/foreignpaymentcodes": {
      "get": {
        "tags": [
          "ForeignPaymentCodesV2"
        ],
        "summary": "Gets a list of foreign payment codes.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard<\/b><\/p>",
        "operationId": "ForeignPaymentCodesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[ForeignPaymentCodesAPI]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/messagethreads\/{messageThreadId}": {
      "get": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Retrives a message thread.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "messageThreadId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageThreadApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Marks a specific message thread.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_MarkThread",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/MessageStatusApi"
            }
          },
          {
            "name": "messageThreadId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageStatusApi"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Replies to a message thread.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_ReplyToMessage",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "messageReplyApi",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/MessageApi"
            }
          },
          {
            "name": "messageThreadId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/messagethreads": {
      "get": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Gets all messages threads.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "excludeClosed",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageThreadApi"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Create a new message thread.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "messageToPostApi",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/MessageToPostApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageToPostApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/messagethreads\/{messageThreadId}\/messages": {
      "get": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Retrives the messages of a message thread.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_GetMessages",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "messageThreadId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/messagethreads\/messages": {
      "get": {
        "tags": [
          "MessageThreadsV2"
        ],
        "summary": "Gets all the messages of the threads.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "MessageThreadsV2_GetMessages",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/MessageApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/notes": {
      "get": {
        "tags": [
          "NotesV2"
        ],
        "summary": "Get all notes.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "NotesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/NoteApi"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "NotesV2"
        ],
        "summary": "Create a new note.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "NotesV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "note",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/NoteApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/NoteApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/notes\/{noteId}": {
      "get": {
        "tags": [
          "NotesV2"
        ],
        "summary": "Get a specific note.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "NotesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "noteId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/NoteApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "NotesV2"
        ],
        "summary": "Updates a note.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "NotesV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "note",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/NoteApi"
            }
          },
          {
            "name": "noteId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/NoteApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/orders": {
      "get": {
        "tags": [
          "OrdersV2"
        ],
        "summary": "Get orders.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "OrdersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[OrderApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "OrdersV2"
        ],
        "summary": "Create order.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "OrdersV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/OrderApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/OrderApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/orders\/{id}": {
      "get": {
        "tags": [
          "OrdersV2"
        ],
        "summary": "Get order",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "OrdersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/OrderApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "OrdersV2"
        ],
        "summary": "Replace content in an order.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "OrdersV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "order",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/OrderApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "OrdersV2"
        ],
        "summary": "Delete an order.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "OrdersV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/partnerresourcelinks": {
      "get": {
        "tags": [
          "PartnerResourceLinksV2"
        ],
        "summary": "Get a list of partner resource links.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "PartnerResourceLinksV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[PartnerResourceLinkApi]"
            }
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "PartnerResourceLinksV2"
        ],
        "summary": "Create a partner resource link",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "PartnerResourceLinksV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLink",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/PartnerResourceLinkApi"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Partner resource link created.",
            "schema": {
              "$ref": "#\/definitions\/PartnerResourceLinkApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/partnerresourcelinks\/{partnerResourceLinkId}": {
      "get": {
        "tags": [
          "PartnerResourceLinksV2"
        ],
        "summary": "Get a partner resource link by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "PartnerResourceLinksV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#\/definitions\/PartnerResourceLinkApi"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "PartnerResourceLinksV2"
        ],
        "summary": "Update a partner resource link",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "PartnerResourceLinksV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "partnerResourceLink",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/PartnerResourceLinkApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Partner resource link updated.",
            "schema": {
              "$ref": "#\/definitions\/PartnerResourceLinkApi"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          },
          "401": {
            "description": "Unauthorized. Access denied."
          },
          "403": {
            "description": "Forbidden. The company is not active, or the startup guide is not completed."
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "PartnerResourceLinksV2"
        ],
        "summary": "Delete a partner resource link",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "PartnerResourceLinksV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "partnerResourceLinkId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Partner resource link deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request. See response body for message."
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/projects": {
      "get": {
        "tags": [
          "ProjectsV2"
        ],
        "summary": "Get a list of projects.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "ProjectsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[ProjectApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "ProjectsV2"
        ],
        "summary": "Create a new project.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "ProjectsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "project",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ProjectApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ProjectApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/projects\/{id}": {
      "get": {
        "tags": [
          "ProjectsV2"
        ],
        "summary": "Get a specific project.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "ProjectsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ProjectApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "ProjectsV2"
        ],
        "summary": "Replace content in a project.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "ProjectsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "project",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/ProjectApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/ProjectApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/salesdocumentattachments": {
      "post": {
        "tags": [
          "SalesDocumentAttachmentsV2"
        ],
        "summary": "Create a sales document attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "SalesDocumentAttachmentsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SalesDocumentAttachmentUploadApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SalesDocumentAttachmentApi"
            }
          }
        },
        "deprecated": true
      }
    },
    "\/v2\/salesdocumentattachments\/customerinvoicedraft": {
      "post": {
        "tags": [
          "SalesDocumentAttachmentsV2"
        ],
        "summary": "Create a sales document attached to a customer invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "SalesDocumentAttachmentsV2_PostCustomerInvoiceDraft",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SalesDocumentAttachmentUploadApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SalesDocumentAttachmentApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/salesdocumentattachments\/customerinvoice": {
      "post": {
        "tags": [
          "SalesDocumentAttachmentsV2"
        ],
        "summary": "Create a sales document attached to a customer invoice (including customer ledger items).",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "SalesDocumentAttachmentsV2_PostCustomerInvoice",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "attachment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SalesDocumentAttachmentUploadApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SalesDocumentAttachmentApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/salesdocumentattachments\/{customerInvoiceDraftId}\/{attachmentId}": {
      "delete": {
        "tags": [
          "SalesDocumentAttachmentsV2"
        ],
        "summary": "Delete a customer invoice draft attachment.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "SalesDocumentAttachmentsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": true
      }
    },
    "\/v2\/salesdocumentattachments\/customerinvoicedraft\/{customerInvoiceDraftId}\/{attachmentId}": {
      "delete": {
        "tags": [
          "SalesDocumentAttachmentsV2"
        ],
        "summary": "Delete a document attached to a customer invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "SalesDocumentAttachmentsV2_DeleteCustomerInvoiceDraft",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/salesdocumentattachments\/customerinvoice\/{customerInvoiceId}\/{attachmentId}": {
      "delete": {
        "tags": [
          "SalesDocumentAttachmentsV2"
        ],
        "summary": "Delete a document attached to a customer invoice (including customer ledger items).",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "SalesDocumentAttachmentsV2_DeleteCustomerInvoice",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "customerInvoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/supplierinvoicedrafts": {
      "get": {
        "tags": [
          "SupplierInvoiceDraftsV2"
        ],
        "summary": "Get a paginated list of all supplier invoice drafts.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SupplierInvoiceDraftsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[SupplierInvoiceDraftApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "SupplierInvoiceDraftsV2"
        ],
        "summary": "Create a supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SupplierInvoiceDraftsV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceDraftApi"
            }
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculateVatOnCostAccounts",
            "in": "query",
            "description": "Automatic calculation of VAT based on vat code. DK and NL only",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "batchProcessExtendedValidation",
            "in": "query",
            "description": "Validate for batch process and fiscal year.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "duplicateCheckExtendedValidation",
            "in": "query",
            "description": "Check if the invoice is duplicate.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceDraft"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/supplierinvoicedrafts\/{supplierInvoiceDraftId}": {
      "get": {
        "tags": [
          "SupplierInvoiceDraftsV2"
        ],
        "summary": "Get a single supplier invoice draft.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SupplierInvoiceDraftsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceDraft"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "SupplierInvoiceDraftsV2"
        ],
        "summary": "Relpace content in a supplier invoice draft.",
        "description": "To update attachments us the attachmenst endpoint.<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SupplierInvoiceDraftsV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "supplierInvoiceDraft",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceDraftApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceDraft"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "SupplierInvoiceDraftsV2"
        ],
        "summary": "Deletes a supplier invoice draft",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SupplierInvoiceDraftsV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceDraftId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/supplierinvoices": {
      "get": {
        "tags": [
          "SupplierInvoicesV2"
        ],
        "summary": "Get a list of supplier invoices",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "SupplierInvoicesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[SupplierInvoiceApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "SupplierInvoicesV2"
        ],
        "summary": "Create a supplier invoice.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "SupplierInvoicesV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoice",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceApi"
            }
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "calculateVatOnCostAccounts",
            "in": "query",
            "description": "Automatic calculation of VAT based on vat code. DK and NL only",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "duplicateCheckExtendedValidation",
            "in": "query",
            "description": "Check if the invoice is duplicate.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/supplierinvoices\/{supplierInvoiceId}": {
      "get": {
        "tags": [
          "SupplierInvoicesV2"
        ],
        "summary": "Get a supplier",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "SupplierInvoicesV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierInvoiceApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/supplierinvoices\/{invoiceId}\/payments": {
      "post": {
        "tags": [
          "SupplierInvoicesV2"
        ],
        "summary": "Post a payment towards a bookkept supplier invoice",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "SupplierInvoicesV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierInvoicePayment",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/InvoicePaymentApi"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/InvoicePaymentApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/suppliers": {
      "get": {
        "tags": [
          "SuppliersV2"
        ],
        "summary": "Get a list of suppliers.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SuppliersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[SupplierApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "SuppliersV2"
        ],
        "summary": "Post a supplier",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SuppliersV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplier",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SupplierApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/suppliers\/{supplierId}": {
      "get": {
        "tags": [
          "SuppliersV2"
        ],
        "summary": "Get a specific supplier.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SuppliersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierApi"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "SuppliersV2"
        ],
        "summary": "Replace a supplier",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SuppliersV2_Put",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "apiSupplier",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/SupplierApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/SupplierApi"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "SuppliersV2"
        ],
        "summary": "Deletes a supplier",
        "description": "<p>Requires any of the following scopes: <br><b>ea:purchase, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Solo<\/b><\/p>",
        "operationId": "SuppliersV2_Delete",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/termsofpayments": {
      "get": {
        "tags": [
          "TermsOfPaymentV2"
        ],
        "summary": "Get a list of TermsOfPayment items",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "TermsOfPaymentV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[TermsOfPaymentApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/termsofpayments\/{id}": {
      "get": {
        "tags": [
          "TermsOfPaymentV2"
        ],
        "summary": "Get a TermsOfPayment item by id",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "TermsOfPaymentV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/TermsOfPaymentApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/units": {
      "get": {
        "tags": [
          "UnitsV2"
        ],
        "summary": "Get a list of Units",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "UnitsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[UnitApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/units\/{id}": {
      "get": {
        "tags": [
          "UnitsV2"
        ],
        "summary": "Get a singel unit.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing, Solo<\/b><\/p>",
        "operationId": "UnitsV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of requested unit.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/UnitApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/users": {
      "get": {
        "tags": [
          "UsersV2"
        ],
        "summary": "Get a list of users",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea:purchase, ea:purchase_readonly, ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "UsersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[UserApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vatcodes": {
      "get": {
        "tags": [
          "VatCodeV2"
        ],
        "summary": "Gets a list of all Vat Codes",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "VatCodeV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "Default value: Today",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/VatCode"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vatcodes\/{id}": {
      "get": {
        "tags": [
          "VatCodeV2"
        ],
        "summary": "Get a vat code item by it's id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo<\/b><\/p>",
        "operationId": "VatCodeV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "vatRateDate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/VatCode"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vatreports": {
      "get": {
        "tags": [
          "VatReportV2"
        ],
        "summary": "Gets a list of all vat reports",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "VatReportV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[VatReportApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vatreports\/{id}": {
      "get": {
        "tags": [
          "VatReportV2"
        ],
        "summary": "Get a vat report item by id.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Solo<\/b><\/p>",
        "operationId": "VatReportV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/VatReportApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vouchers": {
      "get": {
        "tags": [
          "VouchersV2"
        ],
        "summary": "Get all vouchers from all fiscal years.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "VouchersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[VoucherApi]"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "VouchersV2"
        ],
        "summary": "Create a voucher.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping<\/b><\/p>",
        "operationId": "VouchersV2_Post",
        "consumes": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml",
          "application\/x-www-form-urlencoded"
        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "apiVoucher",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#\/definitions\/VoucherApi"
            }
          },
          {
            "name": "useAutomaticVatCalculation",
            "in": "query",
            "description": "Default value: false. Set to true and specify the sales or purchase gross amount and vat rows will be added automatically.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDefaultVatCodes",
            "in": "query",
            "description": "Default value: True. Set to false and override default vatcodes on all rows in the request.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "useDefaultVoucherSeries",
            "in": "query",
            "description": "Default value: True. Set to false and override default voucher series (alphabetic character before number).",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/VoucherApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vouchers\/{fiscalyearId}": {
      "get": {
        "tags": [
          "VouchersV2"
        ],
        "summary": "Get all vouchers in a given fiscal year.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "VouchersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[VoucherApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/vouchers\/{fiscalyearId}\/{voucherId}": {
      "get": {
        "tags": [
          "VouchersV2"
        ],
        "summary": "Get a single voucher from a given fiscal year",
        "description": "<p>Requires any of the following scopes: <br><b>ea:accounting, ea:accounting_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Bookkeeping, Invoicing, Solo, Pro, Standard, Bookkeeping, Invoicing<\/b><\/p>",
        "operationId": "VouchersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "fiscalyearId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "voucherId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/VoucherApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/webshoporders": {
      "get": {
        "tags": [
          "WebshopOrdersV2"
        ],
        "summary": "Get webshop orders.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "WebshopOrdersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[WebshopOrderApi]"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/webshoporders\/{webshopOrderId}": {
      "get": {
        "tags": [
          "WebshopOrdersV2"
        ],
        "summary": "Get a single webshop order.\r\n<param name=\"options\"><\/param><param name=\"webshopOrderId\"><\/param>",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "WebshopOrdersV2_Get",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "webshopOrderId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/WebshopOrderApi"
            }
          }
        },
        "deprecated": false
      }
    },
    "\/v2\/webshoporders\/{webshopOrderId}\/convert": {
      "post": {
        "tags": [
          "WebshopOrdersV2"
        ],
        "summary": "Converts a webshop order to a invoice. The resulted invoice will appear as paid in the sales invoice list.",
        "description": "<p>Requires any of the following scopes: <br><b>ea:sales, ea:sales_readonly, ea.local:mobile_user<\/b><\/p><p>Available in any of the following variants: <br><b>Pro, Standard, Invoicing<\/b><\/p>",
        "operationId": "WebshopOrdersV2_ConvertToInvoice",
        "consumes": [

        ],
        "produces": [
          "application\/json",
          "text\/json",
          "application\/xml",
          "text\/xml"
        ],
        "parameters": [
          {
            "name": "webshopOrderId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#\/definitions\/PaginatedResponse[WebshopOrderApi]"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ODataQueryOptions[AccountBalanceAPI]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "ODataQueryContext": {
      "type": "object",
      "properties": {
        "DefaultQuerySettings": {
          "$ref": "#\/definitions\/DefaultQuerySettings",
          "readOnly": true
        },
        "Model": {
          "$ref": "#\/definitions\/IEdmModel",
          "readOnly": true
        },
        "ElementType": {
          "$ref": "#\/definitions\/IEdmType",
          "readOnly": true
        },
        "NavigationSource": {
          "$ref": "#\/definitions\/IEdmNavigationSource",
          "readOnly": true
        },
        "ElementClrType": {
          "type": "string",
          "readOnly": true
        },
        "Path": {
          "$ref": "#\/definitions\/ODataPath",
          "readOnly": true
        },
        "RequestContainer": {
          "$ref": "#\/definitions\/IServiceProvider",
          "readOnly": true
        }
      }
    },
    "ODataRawQueryOptions": {
      "type": "object",
      "properties": {
        "Filter": {
          "type": "string",
          "readOnly": true
        },
        "Apply": {
          "type": "string",
          "readOnly": true
        },
        "OrderBy": {
          "type": "string",
          "readOnly": true
        },
        "Top": {
          "type": "string",
          "readOnly": true
        },
        "Skip": {
          "type": "string",
          "readOnly": true
        },
        "Select": {
          "type": "string",
          "readOnly": true
        },
        "Expand": {
          "type": "string",
          "readOnly": true
        },
        "Count": {
          "type": "string",
          "readOnly": true
        },
        "Format": {
          "type": "string",
          "readOnly": true
        },
        "SkipToken": {
          "type": "string",
          "readOnly": true
        },
        "DeltaToken": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SelectExpandQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "RawSelect": {
          "type": "string",
          "readOnly": true
        },
        "RawExpand": {
          "type": "string",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/SelectExpandQueryValidator"
        },
        "SelectExpandClause": {
          "$ref": "#\/definitions\/SelectExpandClause",
          "readOnly": true
        },
        "LevelsMaxLiteralExpansionDepth": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApplyQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "ResultClrType": {
          "type": "string",
          "readOnly": true
        },
        "ApplyClause": {
          "$ref": "#\/definitions\/ApplyClause",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "FilterQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/FilterQueryValidator"
        },
        "FilterClause": {
          "$ref": "#\/definitions\/FilterClause",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OrderByQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "OrderByNodes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/OrderByNode"
          },
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/OrderByQueryValidator"
        },
        "OrderByClause": {
          "$ref": "#\/definitions\/OrderByClause",
          "readOnly": true
        }
      }
    },
    "SkipQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/SkipQueryValidator"
        }
      }
    },
    "TopQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/TopQueryValidator"
        }
      }
    },
    "CountQueryOption": {
      "type": "object",
      "properties": {
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "RawValue": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "boolean",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/CountQueryValidator"
        }
      }
    },
    "ODataQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "DefaultQuerySettings": {
      "type": "object",
      "properties": {
        "EnableExpand": {
          "type": "boolean"
        },
        "EnableSelect": {
          "type": "boolean"
        },
        "EnableCount": {
          "type": "boolean"
        },
        "EnableOrderBy": {
          "type": "boolean"
        },
        "EnableFilter": {
          "type": "boolean"
        },
        "MaxTop": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "IEdmModel": {
      "type": "object",
      "properties": {
        "SchemaElements": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/IEdmSchemaElement"
          },
          "readOnly": true
        },
        "VocabularyAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/IEdmVocabularyAnnotation"
          },
          "readOnly": true
        },
        "ReferencedModels": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/IEdmModel"
          },
          "readOnly": true
        },
        "DeclaredNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "DirectValueAnnotationsManager": {
          "$ref": "#\/definitions\/IEdmDirectValueAnnotationsManager",
          "readOnly": true
        },
        "EntityContainer": {
          "$ref": "#\/definitions\/IEdmEntityContainer",
          "readOnly": true
        }
      }
    },
    "IEdmType": {
      "type": "object",
      "properties": {
        "TypeKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmNavigationSource": {
      "type": "object",
      "properties": {
        "NavigationPropertyBindings": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/IEdmNavigationPropertyBinding"
          },
          "readOnly": true
        },
        "Path": {
          "$ref": "#\/definitions\/IEdmPathExpression",
          "readOnly": true
        },
        "Type": {
          "$ref": "#\/definitions\/IEdmType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ODataPath": {
      "type": "object",
      "properties": {
        "EdmType": {
          "$ref": "#\/definitions\/IEdmType",
          "readOnly": true
        },
        "NavigationSource": {
          "$ref": "#\/definitions\/IEdmNavigationSource",
          "readOnly": true
        },
        "Segments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ODataPathSegment"
          },
          "readOnly": true
        },
        "PathTemplate": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IServiceProvider": {
      "type": "object",
      "properties": {

      }
    },
    "SelectExpandQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "SelectExpandClause": {
      "type": "object",
      "properties": {
        "SelectedItems": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SelectItem"
          },
          "readOnly": true
        },
        "AllSelected": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ApplyClause": {
      "type": "object",
      "properties": {
        "Transformations": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/TransformationNode"
          },
          "readOnly": true
        }
      }
    },
    "FilterQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "FilterClause": {
      "type": "object",
      "properties": {
        "Expression": {
          "$ref": "#\/definitions\/SingleValueNode",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#\/definitions\/RangeVariable",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        }
      }
    },
    "OrderByNode": {
      "type": "object",
      "properties": {
        "Direction": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "OrderByQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "OrderByClause": {
      "type": "object",
      "properties": {
        "ThenBy": {
          "$ref": "#\/definitions\/OrderByClause",
          "readOnly": true
        },
        "Expression": {
          "$ref": "#\/definitions\/SingleValueNode",
          "readOnly": true
        },
        "Direction": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "RangeVariable": {
          "$ref": "#\/definitions\/RangeVariable",
          "readOnly": true
        },
        "ItemType": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        }
      }
    },
    "SkipQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "TopQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "CountQueryValidator": {
      "type": "object",
      "properties": {

      }
    },
    "IEdmSchemaElement": {
      "type": "object",
      "properties": {
        "SchemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmVocabularyAnnotation": {
      "type": "object",
      "properties": {
        "Qualifier": {
          "type": "string",
          "readOnly": true
        },
        "Term": {
          "$ref": "#\/definitions\/IEdmTerm",
          "readOnly": true
        },
        "Target": {
          "$ref": "#\/definitions\/IEdmVocabularyAnnotatable",
          "readOnly": true
        },
        "Value": {
          "$ref": "#\/definitions\/IEdmExpression",
          "readOnly": true
        }
      }
    },
    "IEdmDirectValueAnnotationsManager": {
      "type": "object",
      "properties": {

      }
    },
    "IEdmEntityContainer": {
      "type": "object",
      "properties": {
        "Elements": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/IEdmEntityContainerElement"
          },
          "readOnly": true
        },
        "SchemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmNavigationPropertyBinding": {
      "type": "object",
      "properties": {
        "NavigationProperty": {
          "$ref": "#\/definitions\/IEdmNavigationProperty",
          "readOnly": true
        },
        "Target": {
          "$ref": "#\/definitions\/IEdmNavigationSource",
          "readOnly": true
        },
        "Path": {
          "$ref": "#\/definitions\/IEdmPathExpression",
          "readOnly": true
        }
      }
    },
    "IEdmPathExpression": {
      "type": "object",
      "properties": {
        "PathSegments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "Path": {
          "type": "string",
          "readOnly": true
        },
        "ExpressionKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ODataPathSegment": {
      "type": "object",
      "properties": {
        "EdmType": {
          "$ref": "#\/definitions\/IEdmType",
          "readOnly": true
        },
        "Identifier": {
          "type": "string"
        }
      }
    },
    "SelectItem": {
      "type": "object",
      "properties": {

      }
    },
    "TransformationNode": {
      "type": "object",
      "properties": {
        "Kind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SingleValueNode": {
      "type": "object",
      "properties": {
        "TypeReference": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        },
        "Kind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27,
            28
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "RangeVariable": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "readOnly": true
        },
        "TypeReference": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        },
        "Kind": {
          "format": "int32",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmTypeReference": {
      "type": "object",
      "properties": {
        "IsNullable": {
          "type": "boolean",
          "readOnly": true
        },
        "Definition": {
          "$ref": "#\/definitions\/IEdmType",
          "readOnly": true
        }
      }
    },
    "IEdmTerm": {
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        },
        "AppliesTo": {
          "type": "string",
          "readOnly": true
        },
        "DefaultValue": {
          "type": "string",
          "readOnly": true
        },
        "SchemaElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "type": "integer",
          "readOnly": true
        },
        "Namespace": {
          "type": "string",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmVocabularyAnnotatable": {
      "type": "object",
      "properties": {

      }
    },
    "IEdmExpression": {
      "type": "object",
      "properties": {
        "ExpressionKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "IEdmEntityContainerElement": {
      "type": "object",
      "properties": {
        "ContainerElementKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer",
          "readOnly": true
        },
        "Container": {
          "$ref": "#\/definitions\/IEdmEntityContainer",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmNavigationProperty": {
      "type": "object",
      "properties": {
        "Partner": {
          "$ref": "#\/definitions\/IEdmNavigationProperty",
          "readOnly": true
        },
        "OnDelete": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "ContainsTarget": {
          "type": "boolean",
          "readOnly": true
        },
        "ReferentialConstraint": {
          "$ref": "#\/definitions\/IEdmReferentialConstraint",
          "readOnly": true
        },
        "PropertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Type": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        },
        "DeclaringType": {
          "$ref": "#\/definitions\/IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmReferentialConstraint": {
      "type": "object",
      "properties": {
        "PropertyPairs": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/EdmReferentialConstraintPropertyPair"
          },
          "readOnly": true
        }
      }
    },
    "IEdmStructuredType": {
      "type": "object",
      "properties": {
        "IsAbstract": {
          "type": "boolean",
          "readOnly": true
        },
        "IsOpen": {
          "type": "boolean",
          "readOnly": true
        },
        "BaseType": {
          "$ref": "#\/definitions\/IEdmStructuredType",
          "readOnly": true
        },
        "DeclaredProperties": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/IEdmProperty"
          },
          "readOnly": true
        },
        "TypeKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8
          ],
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "EdmReferentialConstraintPropertyPair": {
      "type": "object",
      "properties": {
        "DependentProperty": {
          "$ref": "#\/definitions\/IEdmStructuralProperty",
          "readOnly": true
        },
        "PrincipalProperty": {
          "$ref": "#\/definitions\/IEdmStructuralProperty",
          "readOnly": true
        }
      }
    },
    "IEdmProperty": {
      "type": "object",
      "properties": {
        "PropertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Type": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        },
        "DeclaringType": {
          "$ref": "#\/definitions\/IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IEdmStructuralProperty": {
      "type": "object",
      "properties": {
        "DefaultValueString": {
          "type": "string",
          "readOnly": true
        },
        "PropertyKind": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "readOnly": true
        },
        "Type": {
          "$ref": "#\/definitions\/IEdmTypeReference",
          "readOnly": true
        },
        "DeclaringType": {
          "$ref": "#\/definitions\/IEdmStructuredType",
          "readOnly": true
        },
        "Name": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PaginatedResponse[AccountBalanceAPI]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AccountBalanceAPI"
          }
        }
      }
    },
    "PaginationMetadata": {
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNumberOfPages": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNumberOfResults": {
          "format": "int32",
          "type": "integer"
        },
        "ServerTimeUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "AccountBalanceAPI": {
      "type": "object",
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "description": "Read-only. The account number",
          "type": "integer"
        },
        "AccountName": {
          "description": "Read-only. The name of the account",
          "type": "string"
        },
        "Balance": {
          "format": "double",
          "description": "Read-only. The account balance",
          "type": "number"
        }
      }
    },
    "ODataQueryOptions[AccountApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[AccountApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AccountApi"
          }
        }
      }
    },
    "AccountApi": {
      "required": [
        "Name",
        "Number",
        "FiscalYearId",
        "IsActive"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Max length: 100 characters. The name of the account",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Number": {
          "description": "The account number",
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "description": "The Id of the VAT code that is associated with the account",
          "type": "string"
        },
        "VatCodeDescription": {
          "description": "Read-only. Describes what kind of VAT that is associated with the account",
          "type": "string"
        },
        "FiscalYearId": {
          "format": "uuid",
          "description": "The Id of the Fiscal year that the account belongs to",
          "type": "string"
        },
        "ReferenceCode": {
          "description": "Read-only. Returns the reference code on the account. This feature is for dutch companies only",
          "type": "string"
        },
        "Type": {
          "format": "int32",
          "description": "Read-only. Returns account type number. Netherlands only",
          "type": "integer"
        },
        "TypeDescription": {
          "description": "Read-only. Returns account type descripion",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-only.",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsProjectAllowed": {
          "type": "boolean"
        },
        "IsCostCenterAllowed": {
          "type": "boolean"
        },
        "IsBlockedForManualBooking": {
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[StandardAccountApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[StandardAccountApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/StandardAccountApi"
          }
        }
      }
    },
    "StandardAccountApi": {
      "type": "object",
      "properties": {
        "AccountType": {
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ODataQueryOptions[AccountTypesAPI]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[AccountTypesAPI]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AccountTypesAPI"
          }
        }
      }
    },
    "AccountTypesAPI": {
      "type": "object",
      "properties": {
        "Type": {
          "format": "int32",
          "type": "integer"
        },
        "TypeDescription": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[AllocationPeriodApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[AllocationPeriodApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AllocationPeriodApi"
          }
        }
      }
    },
    "AllocationPeriodApi": {
      "required": [
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceId": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceRow": {
          "format": "int32",
          "type": "integer"
        },
        "ManualVoucherId": {
          "format": "uuid",
          "type": "string"
        },
        "ManualVoucherRow": {
          "format": "int32",
          "type": "integer"
        },
        "AllocationPeriodSourceType": {
          "format": "int32",
          "description": "0 = SupplierInvoice, 1 = ManualVoucher",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "Status": {
          "format": "int32",
          "description": "0 = Pending, 1 = Revoked, 2 = Booked",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "BookkeepingDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AllocationPeriodRowApi"
          }
        },
        "DebitAccountNumber": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "CreditAccountNumber": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "AllocationPeriodRowApi": {
      "required": [
        "AccountNumber",
        "Amount",
        "DebitCredit"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "AllocationPeriodId": {
          "format": "uuid",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "DebitCredit": {
          "format": "int32",
          "description": "1 = Debit, 2 = Credit",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "AllocationPlan": {
      "required": [
        "BookkeepingStartDate",
        "AmountToAllocate",
        "AllocationAccountNumber",
        "NumberOfAllocationPeriods"
      ],
      "type": "object",
      "properties": {
        "SupplierInvoiceId": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceRow": {
          "format": "int32",
          "type": "integer"
        },
        "VoucherId": {
          "format": "uuid",
          "type": "string"
        },
        "VoucherRow": {
          "format": "int32",
          "type": "integer"
        },
        "BookkeepingStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "AmountToAllocate": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "QuantityToAllocate": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "WeightToAllocate": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "AllocationAccountNumber": {
          "format": "int64",
          "maximum": 9999,
          "minimum": 0,
          "type": "integer"
        },
        "NumberOfAllocationPeriods": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ApprovalApi": {
      "required": [
        "DocumentApprovalStatus"
      ],
      "type": "object",
      "properties": {
        "DocumentApprovalStatus": {
          "format": "int32",
          "description": "1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "RejectionMessage": {
          "description": "Purpose: The message sent to users when rejecting a document. Empty if DocumentApprovalStatus is not 2 = Rejected.\r\nMax length: 200 characters",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "RejectionMessageReceivers": {
          "description": "Purpose: The recipients of the rejection message. Empty if DocumentApprovalStatus is not 2 = Rejected. List of user ids.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "VatReportApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "DocumentApprovalStatus": {
          "format": "int32",
          "description": "0 = None, 1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "DocumentId": {
          "format": "uuid",
          "description": "Purpose: Use for GET \/v2\/documents\/{id}",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IsRegretted": {
          "description": "Indicates whether the vat report was undone",
          "type": "boolean"
        },
        "RegrettedByUserId": {
          "format": "uuid",
          "description": "If the vat report was undone this indicates the user id that did the action",
          "type": "string"
        },
        "RegrettedDate": {
          "format": "date-time",
          "description": "If the vat report was undone this indicates the date of the action",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "SentForApprovalByUserId": {
          "format": "uuid",
          "type": "string"
        },
        "VoucherId": {
          "format": "uuid",
          "description": "Purpose: Use for GET \/v2\/vouchers\/{fiscalyearId}\/{voucherId}",
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Predicted vat amount to pay or be refunded",
          "type": "number"
        },
        "ApprovalEventsHistory": {
          "description": "The history of approval events of the vat report.",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/DocumentApprovalEventApi"
          }
        }
      }
    },
    "DocumentApprovalEventApi": {
      "type": "object",
      "properties": {
        "DocumentApprovalStatus": {
          "format": "int32",
          "description": "0 = None, 1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedByUserId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[ArticleAccountCodingAPI]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[ArticleAccountCodingAPI]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ArticleAccountCodingAPI"
          }
        }
      }
    },
    "ArticleAccountCodingAPI": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameEnglish": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "VatRate": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "VatRatePercent": {
          "format": "double",
          "type": "number"
        },
        "DomesticSalesSubjectToReversedConstructionVatAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesSubjectToVatAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesVatExemptAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToMossAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToThirdPartySalesAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesSubjectToVatWithinEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesVatExemptOutsideEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ForeignSalesVatExemptWithinEuAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "DomesticSalesVatCodeExemptAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "ChangedUtc": {
          "format": "date-time",
          "description": "Read-only",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[ArticleLabelApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[ArticleLabelApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ArticleLabelApi"
          }
        }
      }
    },
    "ArticleLabelApi": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Max length: 400 characters",
          "maxLength": 400,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[ArticleApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[ArticleApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ArticleApi"
          }
        }
      }
    },
    "ArticleApi": {
      "required": [
        "IsActive",
        "Number",
        "Name",
        "CodingId",
        "UnitId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Number": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NameEnglish": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NetPrice": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "GrossPrice": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 10000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CodingId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/articleaccountcodings",
          "type": "string"
        },
        "CodingName": {
          "description": "Read-only",
          "type": "string"
        },
        "UnitId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/units",
          "type": "string"
        },
        "UnitName": {
          "description": "Read-only: Returns the unit name entered from UnitId",
          "type": "string"
        },
        "UnitAbbreviation": {
          "description": "Read-only: Returns the unit abbreviation entered from UnitId",
          "type": "string"
        },
        "StockBalance": {
          "format": "double",
          "description": "Default: 0. Purpose: Sets the stock balance for this article",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "StockBalanceManuallyChangedUtc": {
          "format": "date-time",
          "description": "Read-only: Set when the stock balance is changed manually",
          "type": "string"
        },
        "StockBalanceReserved": {
          "format": "double",
          "description": "Purpose: Returns the reserved stock balance for this article",
          "type": "number"
        },
        "StockBalanceAvailable": {
          "format": "double",
          "description": "Purpose: Returns the available stock balance for this article",
          "type": "number"
        },
        "ChangedUtc": {
          "format": "date-time",
          "description": "Purpose: Returns the last date and time from when a change was made on the article",
          "type": "string"
        },
        "HouseWorkType": {
          "format": "int32",
          "type": "integer"
        },
        "PurchasePrice": {
          "format": "double",
          "type": "number"
        },
        "PurchasePriceManuallyChangedUtc": {
          "format": "date-time",
          "description": "Read-only: Set when the purchase price is changed manually",
          "type": "string"
        },
        "SendToWebshop": {
          "description": "Purpose: If true, will send article to VismaWebShop (If company has the integration). Default: True",
          "type": "boolean"
        },
        "ArticleLabels": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ArticleLabelApi"
          }
        }
      }
    },
    "AttachmentLinkApi": {
      "required": [
        "DocumentType",
        "AttachmentIds"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "uuid",
          "description": "The Id of the corresponding linked document",
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "description": "0 = None, 1 = SupplierInvoice, 2 = Receipt, 3 = Voucher, 4 = SupplierInvoiceDraft, 5 = AllocationPeriod, 6 = Transfer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "AttachmentIds": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "ODataQueryOptions[AttachmentResultApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[AttachmentResultApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AttachmentResultApi"
          }
        }
      }
    },
    "AttachmentResultApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "AttachedDocumentType": {
          "format": "int32",
          "description": "0 = None, 1 = SupplierInvoice, 2 = Receipt, 3 = Voucher, 4 = SupplierInvoiceDraft, 5 = AllocationPeriod, 6 = Transfer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "FileName": {
          "type": "string"
        },
        "TemporaryUrl": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        },
        "SupplierName": {
          "type": "string"
        },
        "AmountInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "Type": {
          "format": "int32",
          "description": "0 = Invoice, 1 = Receipt, 2 = Document",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "AttachmentStatus": {
          "format": "int32",
          "description": "0 = Matched, 1 = Unmatched",
          "enum": [
            0,
            1
          ],
          "type": "integer"
        },
        "UploadedBy": {
          "description": "Read-only",
          "type": "string"
        },
        "ImageDate": {
          "format": "date-time",
          "description": "Read-only",
          "type": "string"
        }
      }
    },
    "AttachmentUploadApi": {
      "required": [
        "ContentType",
        "FileName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ContentType": {
          "description": "= ['image\/jpeg' or 'image\/png' or 'image\/tiff' or 'application\/pdf']",
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "Data": {
          "description": "Format: Must be Base64 encoded byte array.",
          "type": "string"
        },
        "Url": {
          "description": "Must be public URL",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[BankAccountApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[BankAccountApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/BankAccountApi"
          }
        }
      }
    },
    "BankAccountApi": {
      "required": [
        "BankAccountType",
        "Name",
        "LedgerAccountNumber"
      ],
      "type": "object",
      "properties": {
        "Bank": {
          "format": "uuid",
          "description": "Not required for bank accounts of cash or tax account type",
          "type": "string"
        },
        "BankAccountType": {
          "format": "int32",
          "description": "1 = ChequeAccount, 2 = CashAccount, 3 = SavingsAccount, 4 = CurrencyAccount, 5 = DigitalWalletAccount,\r\n6 = CashCreditAccount, 7 = TaxAccount",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "type": "integer"
        },
        "BankAccountTypeDescription": {
          "description": "Read-only: Description of Bank Account type",
          "type": "string"
        },
        "Bban": {
          "description": "Also known as Bank Account number. Not required for bank accounts of cash or tax account type",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "Iban": {
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "LedgerAccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "HasActiveBankAgreement": {
          "type": "boolean"
        },
        "IsDefaultChequeAccount": {
          "description": "Purpose: Only used when having several cheque accounts",
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[BankApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[BankApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/BankApi"
          }
        }
      }
    },
    "BankApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[CompanySettingsApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "CompanySettingsApi": {
      "required": [
        "Name",
        "CountryCode"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Email": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Phone": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "MobilePhone": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Address1": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Address2": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Website": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCode": {
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "VatCode": {
          "description": "VAT identification number",
          "type": "string"
        },
        "BankGiro": {
          "description": "Only used in Sweden.",
          "type": "string"
        },
        "PlusGiro": {
          "description": "Only used in Sweden.",
          "type": "string"
        },
        "BankAccount": {
          "type": "string"
        },
        "Iban": {
          "type": "string"
        },
        "AccountingLockedTo": {
          "format": "date-time",
          "type": "string"
        },
        "Gln": {
          "description": "Global Location Number",
          "type": "string"
        },
        "ProductVariant": {
          "format": "int32",
          "description": "Read-only: Variant of eAccouting. 1 = Standard\/Smart, 2 = Invoicing, 3 = Bookkeeping, 4 = Start\/Solo, 5 = Pro, 6 = InvoicingCollaboration",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "TypeOfBusiness": {
          "format": "int32",
          "description": "Read-only: 1 = Corporation, 2 = SoleProprietorship, 3 = EconomicAssociation, 4 = NonProfitOrganization, 5 = GeneralPartnership, 6 = LimitedPartnership, 7 = Cooperatives, 9 = PublicLimited",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            9
          ],
          "type": "integer"
        },
        "VatPeriod": {
          "format": "int32",
          "description": "Read-only: Period when VAT report should be sent. 1 = OnceAMonth12th, 2 = OnceAMonth26th, 3 = OnceAQuarter, 4 = OnceAYear, 5 = Never, 6 = Bimonthly, 7 = OnceAMonth, 8 = TwiceAYear, 9 = OnceAQuarterFloating",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "type": "integer"
        },
        "ActivatedModules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CompanyText": {
          "$ref": "#\/definitions\/CompanyTextsApi",
          "description": "Company settings - Other information"
        },
        "NextCustomerNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "NextSupplierNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "NextCustomerInvoiceNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "NextQuoteNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "ShowPricesExclVatPC": {
          "description": "Read-only: Show prices excluding VAT for private individuals",
          "type": "boolean"
        }
      }
    },
    "CompanyTextsApi": {
      "type": "object",
      "properties": {
        "CustomerInvoiceTextDomestic": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "CustomerInvoiceTextForeign": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OrderTextDomestic": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OrderTextForeign": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OverDueTextDomestic": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        },
        "OverDueTextForeign": {
          "description": "Max length: 180 characters",
          "maxLength": 180,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[CostCenterApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "CostCenterItemApi": {
      "required": [
        "CostCenterId",
        "Name",
        "ShortName",
        "IsActive"
      ],
      "type": "object",
      "properties": {
        "CostCenterId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ShortName": {
          "description": "Max length: 9 characters",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        }
      }
    },
    "PaginatedResponse[CostCenterApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CostCenterApi"
          }
        }
      }
    },
    "CostCenterApi": {
      "type": "object",
      "properties": {
        "Name": {
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Number": {
          "format": "int32",
          "type": "integer"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CostCenterItemApi"
          }
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[CountryApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CountryApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CountryApi"
          }
        }
      }
    },
    "CountryApi": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "IsEuMember": {
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[CurrencyApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CurrencyApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CurrencyApi"
          }
        }
      }
    },
    "CurrencyApi": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[CustomerInvoiceDraftApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CustomerInvoiceDraftApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerInvoiceDraftApi"
          }
        }
      }
    },
    "CustomerInvoiceDraftApi": {
      "required": [
        "CustomerId",
        "RotReducedInvoicingType",
        "InvoiceCustomerName",
        "InvoicePostalCode",
        "InvoiceCity",
        "InvoiceCountryCode",
        "EuThirdParty",
        "CustomerIsPrivatePerson"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/customers",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Read-only: Is automatically set",
          "type": "string"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "description": "0 = Normal, 1 = Rot, 2 = Rut",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingOrgNumber": {
          "description": "Max length: 11 characters",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "RotReducedInvoicingAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "description": "Default: False",
          "type": "boolean"
        },
        "RotPropertyType": {
          "format": "int32",
          "type": "integer"
        },
        "HouseWorkOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerInvoiceDraftRowApi"
          }
        },
        "Persons": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SalesDocumentRotRutReductionPersonApi"
          }
        },
        "YourReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCurrencyCode": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "CustomerIsPrivatePerson": {
          "type": "boolean"
        },
        "ReverseChargeOnConstructionServices": {
          "description": "Read-only",
          "type": "boolean"
        },
        "SalesDocumentAttachments": {
          "description": "Read-only",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalRoundings": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalAmountBaseCurrency": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalVatAmountBaseCurrency": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "CustomerNumber": {
          "description": "Read-only\r\nMax length: 16 characters",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "IncludesVat": {
          "description": "Read-only: If true the unit prices on rows include VAT. The value is set upon creation depending whether \"Show prices excl. VAT for private individuals\" in company settings is marked or not",
          "type": "boolean"
        }
      }
    },
    "CustomerInvoiceDraftRowApi": {
      "required": [
        "LineNumber",
        "IsTextRow",
        "Text",
        "ReversedConstructionServicesVatFree"
      ],
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "maximum": 1000,
          "minimum": 0,
          "type": "integer"
        },
        "ArticleId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/articles. Required if IsTextRow is false",
          "type": "string"
        },
        "ArticleNumber": {
          "description": "Purpose: Returns the article number from the entered ArticleId",
          "type": "string"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "Text": {
          "description": "Max length: 2000. Sets the article name",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "description": "Format: 2 decimals allowed\r\nDefault: The price that is set on the article's register. For using a custom price, use this property",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Format: 4 decimals allowed",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "WorkCostType": {
          "format": "int32",
          "type": "integer"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "WorkHours": {
          "format": "double",
          "type": "number"
        },
        "MaterialCosts": {
          "format": "double",
          "type": "number"
        },
        "ReversedConstructionServicesVatFree": {
          "type": "boolean"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenteritems",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenteritems",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenteritems",
          "type": "string"
        },
        "UnitAbbreviation": {
          "type": "string"
        },
        "VatRateId": {
          "description": "Source: Get from \/v2\/articleaccountcodings \r\nRead-only",
          "type": "string"
        },
        "UnitName": {
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "SalesDocumentRotRutReductionPersonApi": {
      "required": [
        "Ssn"
      ],
      "type": "object",
      "properties": {
        "Ssn": {
          "description": "Max length: 50 characters. Purpose: Social security number",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CustomerInvoiceDraftValidationApi": {
      "type": "object",
      "properties": {
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "description": "Invoice total amount. Should be negative when credit invoice",
          "type": "number"
        },
        "TotalVatAmountInvoiceCurrency": {
          "format": "double",
          "description": "Invoice VAT amount. Should be negative when credit invoice",
          "type": "number"
        },
        "TotalRoundingsInvoiceCurrency": {
          "format": "double",
          "description": "Invoice Roundings amount. Can be both positive and negative depending on the rounding.",
          "type": "number"
        },
        "Rows": {
          "description": "A set of invoice rows to validate. We match upon the line number.",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerInvoiceDraftValidationRowApi"
          }
        }
      }
    },
    "CustomerInvoiceDraftValidationRowApi": {
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "description": "Line number from the customer invoice draft",
          "type": "integer"
        },
        "TotalAmountNoVatInvoiceCurrency": {
          "format": "double",
          "description": "Total amount without VAT ((Quantity * Unit price) - Discount)",
          "type": "number"
        },
        "TotalAmountIncVatInvoiceCurrency": {
          "format": "double",
          "description": "Total amount with VAT ((Quantity * Unit price) - Discount)",
          "type": "number"
        }
      }
    },
    "CustomerInvoiceApi": {
      "required": [
        "EuThirdParty",
        "CustomerId",
        "Rows",
        "RotReducedInvoicingType"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: This is automatically generated by eAccounting upon creation",
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "description": "Read-only",
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "description": "Default: Automatic calculation of the currency rate. Enter this value to provide a custom rate",
          "type": "number"
        },
        "CreatedByUserId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalRoundings": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "TotalVatAmountInvoiceCurrency": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerInvoiceRowApi"
          }
        },
        "InvoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "description": "0 = Normal, 1 = Rot, 2 = Rut",
          "maximum": 2,
          "minimum": 0,
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotReducedInvoicingAmount": {
          "format": "double",
          "description": "Default: Automatic tax reduction calculation. Used for the manual input of the deducted tax reduction",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RotReducedInvoicingPercent": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "RotReducedInvoicingPropertyName": {
          "description": "Default: The name of the property type. Used for providing a custom name",
          "type": "string"
        },
        "RotReducedInvoicingOrgNumber": {
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "Persons": {
          "description": "Required for ROT\/RUT invoices only",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SalesDocumentRotRutReductionPersonApi"
          }
        },
        "RotReducedInvoicingAutomaticDistribution": {
          "description": "Read-only",
          "type": "boolean"
        },
        "ElectronicReference": {
          "type": "string"
        },
        "ElectronicAddress": {
          "description": "Read-only",
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "YourReference": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Read-only",
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Read-only",
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Read-only",
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Read-only",
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Read-only",
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryAddress2": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Read-only",
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Read-only",
          "type": "string"
        },
        "CustomerIsPrivatePerson": {
          "description": "Read-only",
          "type": "boolean"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "CustomerEmail": {
          "description": "Read-only",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "CustomerNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "RotPropertyType": {
          "format": "int32",
          "description": "1 = Apartment, 2 = Property",
          "maximum": 2,
          "minimum": 1,
          "type": "integer"
        },
        "SalesDocumentAttachments": {
          "description": "Read-only",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        },
        "HasAutoInvoiceError": {
          "description": "Read-only",
          "type": "boolean"
        },
        "IsNotDelivered": {
          "description": "Read-only",
          "type": "boolean"
        },
        "ReverseChargeOnConstructionServices": {
          "description": "Read-only",
          "type": "boolean"
        },
        "WorkHouseOtherCosts": {
          "format": "double",
          "type": "number"
        },
        "RemainingAmount": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "ReferringInvoiceId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "VoucherNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "VoucherId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Read-only",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-only",
          "type": "string"
        },
        "ReversedConstructionVatInvoicing": {
          "description": "Read-only",
          "type": "boolean"
        },
        "IncludesVat": {
          "description": "Read-only: If true the unit prices on rows include VAT. The value is set upon creation depending whether \"Show prices excl. VAT for private individuals\" in company settings is marked or not",
          "type": "boolean"
        },
        "SendType": {
          "format": "int32",
          "description": "Work in progress.",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "CustomerInvoiceRowApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "ArticleNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "ArticleId": {
          "format": "uuid",
          "description": "Null if text row",
          "type": "string"
        },
        "AmountNoVat": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "PercentVat": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "LineNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "IsTextRow": {
          "description": "Read-only",
          "type": "boolean"
        },
        "Text": {
          "description": "Default: The article's name",
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "UnitAbbreviation": {
          "description": "Read-only",
          "type": "string"
        },
        "UnitAbbreviationEnglish": {
          "description": "Read-only",
          "type": "string"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Format: 4 decimals",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "IsWorkCost": {
          "description": "Read-only",
          "type": "boolean"
        },
        "IsVatFree": {
          "type": "boolean"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "UnitId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "WorkCostType": {
          "format": "int32",
          "description": "Only used for ROT\/RUT invoices",
          "type": "integer"
        },
        "WorkHours": {
          "format": "double",
          "description": "Only used for ROT\/RUT invoices",
          "type": "number"
        },
        "MaterialCosts": {
          "format": "double",
          "description": "Only used for ROT\/RUT invoices",
          "type": "number"
        }
      }
    },
    "ODataQueryOptions[CustomerInvoiceApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CustomerInvoiceApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerInvoiceApi"
          }
        }
      }
    },
    "InvoiceUrlApi": {
      "type": "object",
      "properties": {
        "Url": {
          "description": "URL to the invoice.",
          "type": "string"
        }
      }
    },
    "InvoicePaymentApi": {
      "required": [
        "CompanyBankAccountId",
        "PaymentDate",
        "PaymentAmount",
        "PaymentCurrency",
        "PaymentType"
      ],
      "type": "object",
      "properties": {
        "CompanyBankAccountId": {
          "format": "uuid",
          "description": "The bank account to which the payment is recorded",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "Reference": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "PaymentAmount": {
          "format": "double",
          "description": "Amount in invoice currency. If bank fee: for customer invoices, extract that amount here. For supplier invoices, do not extract bank fee amount here.",
          "type": "number"
        },
        "PaymentCurrency": {
          "type": "string"
        },
        "DomesticPaymentAmount": {
          "format": "double",
          "description": "Only for non domestic invoices paid with cheque account. If bank fee: for customer invoices, extract that amount here. For supplier invoices, do not extract bank fee amount here.",
          "type": "number"
        },
        "BankFeeAmount": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": 0,
          "type": "number"
        },
        "PaymentType": {
          "format": "int32",
          "description": "1 = PartialPayment, 2 = CompletePayment, 3 = Rounding",
          "maximum": 3,
          "minimum": 1,
          "enum": [
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "FactoringFeeAmount": {
          "format": "double",
          "description": "Factoring fee amount for the current invoice, supported only for customer invoice payments",
          "type": "number"
        },
        "FactoringFeeAccountNumber": {
          "format": "int64",
          "description": "Factoring account number, supported only for customer invoice payments",
          "type": "integer"
        }
      }
    },
    "ODataQueryOptions[CustomerLabelApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CustomerLabelApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerLabelApi"
          }
        }
      }
    },
    "CustomerLabelApi": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Max length: 400 characters",
          "maxLength": 400,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[CustomerLedgerItemApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CustomerLedgerItemApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerLedgerItemApi"
          }
        }
      }
    },
    "CustomerLedgerItemApi": {
      "required": [
        "CurrencyCode",
        "CustomerId",
        "DueDate",
        "InvoiceDate",
        "InvoiceNumber",
        "IsCreditInvoice",
        "RemainingAmountInvoiceCurrency",
        "RoundingsAmountInvoiceCurrency",
        "TotalAmountInvoiceCurrency",
        "VATAmountInvoiceCurrency",
        "VoucherId"
      ],
      "type": "object",
      "properties": {
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CurrencyRateUnit": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/customerlistitems.",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "PaymentReferenceNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "RoundingsAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1,
          "minimum": -1,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VATAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VoucherId": {
          "format": "uuid",
          "description": "Source: Get from v1\/vouchers\/{fiscalyearid}.",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CustomerLedgerItemWithVoucherApi": {
      "required": [
        "CurrencyCode",
        "CustomerId",
        "DueDate",
        "InvoiceDate",
        "InvoiceNumber",
        "IsCreditInvoice",
        "RemainingAmountInvoiceCurrency",
        "RoundingsAmountInvoiceCurrency",
        "TotalAmountInvoiceCurrency",
        "VATAmountInvoiceCurrency",
        "Voucher"
      ],
      "type": "object",
      "properties": {
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CurrencyRateUnit": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "uuid",
          "description": "Source: Get from \/customerlistitems.",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "InvoiceNumber": {
          "format": "int32",
          "type": "integer"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "PaymentReferenceNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "RoundingsAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1,
          "minimum": -1,
          "type": "number"
        },
        "TotalAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "VATAmountInvoiceCurrency": {
          "format": "double",
          "maximum": 1000000000,
          "minimum": -1000000000,
          "type": "number"
        },
        "Voucher": {
          "$ref": "#\/definitions\/VoucherApi"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "VoucherApi": {
      "required": [
        "VoucherDate",
        "VoucherText",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "VoucherDate": {
          "format": "date-time",
          "description": "Format: yyyy-mm-dd",
          "type": "string"
        },
        "VoucherText": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/VoucherRowApi"
          }
        },
        "NumberAndNumberSeries": {
          "description": "Purpose: Returns the voucher number.",
          "type": "string"
        },
        "NumberSeries": {
          "description": "Purpose: Returns the number series. Use parameter useDefaultNumberSeries with false value to set Series.",
          "type": "string"
        },
        "Attachments": {
          "$ref": "#\/definitions\/AttachmentLinkApi"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "VoucherType": {
          "format": "int32",
          "description": "2 = ManualVoucher, 5 = BankAccountTransferDeposit, 6 = BankAccountTransferWithDrawal, \r\n7 = PurchaseReceipt, 8 = VatReport, 9 = SieImport, 10 = BankTransactionDeposit, 11 = BankTransactionWithdrawal,\r\n12 = SupplierInvoiceDebit, 13 = SupplierInvoiceCredit, 14 = CustomerInvoiceDebit, 15 = CustomerInvoiceCredit,\r\n16 = ClaimOnCardAcquirer, 17 = TaxReturn, 18 = AllocationPeriod, 19 = AllocationPeriodCorrection, \r\n20 = InventoryEvent, 21 = EmployerReport, 22 = Payslip, 23 = CustomerQuickInvoiceDebit,\r\n24 = CustomerQuickInvoiceCredit, 25 = SupplierQuickInvoiceDebit, 26 = SupplierQuickInvoiceCredit, \r\n27 = IZettleVoucher",
          "enum": [
            2,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26,
            27
          ],
          "type": "integer"
        },
        "SourceId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "VoucherRowApi": {
      "required": [
        "AccountNumber"
      ],
      "type": "object",
      "properties": {
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "AccountDescription": {
          "description": "Read-only",
          "type": "string"
        },
        "DebitAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "maximum": 1000000000,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from \/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from \/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from \/costcenters",
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "type": "string"
        },
        "VatCodeAndPercent": {
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "integer"
        },
        "ProjectId": {
          "format": "uuid",
          "description": "Source: Get from \/projects",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[CustomerApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[CustomerApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerApi"
          }
        }
      }
    },
    "CustomerApi": {
      "required": [
        "InvoiceCity",
        "InvoicePostalCode",
        "Name",
        "TermsOfPaymentId",
        "IsPrivatePerson",
        "IsActive"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "CustomerNumber": {
          "description": "Max length: 20 characters. Purpose: Unique identifier. If not provided, eAccounting will provide one",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonEmail": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonMobile": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonPhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters. Default value: Currency of the user company",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "GLN": {
          "description": "NOTE: Obsolete. Please use EdiGlnNumber instead",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice address differs from delivery address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice address differs from delivery address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters. Purpose: Only used if invoice city differs from delivery city",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters. Purpose: Only used if invoice country code differs from delivery country code",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters. Purpose: Only used if invoice postal code differs from delivery postal code",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/deliverymethods",
          "type": "string"
        },
        "DeliveryTermId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/deliveryterms",
          "type": "string"
        },
        "PayToAccountId": {
          "format": "uuid",
          "description": "Read-only: The account Id on which payments are registered",
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "Max length: 4000 characters",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "ReverseChargeOnConstructionServices": {
          "description": "Default: false. Purpose: If true, VatNumber must be set aswell",
          "type": "boolean"
        },
        "WebshopCustomerNumber": {
          "format": "int32",
          "type": "integer"
        },
        "MobilePhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Telephone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/termsofpayment",
          "type": "string"
        },
        "TermsOfPayment": {
          "$ref": "#\/definitions\/TermsOfPaymentApi",
          "description": "Read-only. Purpose: Returns the terms of payment model entered from TermsOfPaymentId"
        },
        "VatNumber": {
          "description": "Max length: 20 characters. Format: 2 character country code followed by 8-12 numbers.",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "WwwAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "LastInvoiceDate": {
          "format": "date-time",
          "description": "Read-only. Purpose: Returns the last invoice date",
          "type": "string"
        },
        "IsPrivatePerson": {
          "type": "boolean"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Format: 4 decimals",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "ChangedUtc": {
          "format": "date-time",
          "description": "Read-only. Purpose: Returns the last date and time from when a change was made on the customer",
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "ForceBookkeepVat": {
          "type": "boolean"
        },
        "EdiGlnNumber": {
          "type": "string"
        },
        "SalesDocumentLanguage": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "ElectronicAddress": {
          "type": "string"
        },
        "ElectronicReference": {
          "type": "string"
        },
        "EdiServiceDelivererId": {
          "type": "string"
        },
        "AutoInvoiceActivationEmailSentDate": {
          "format": "date-time",
          "type": "string"
        },
        "AutoInvoiceRegistrationRequestSentDate": {
          "format": "date-time",
          "type": "string"
        },
        "EmailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomerLabels": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/CustomerLabelApi"
          }
        }
      }
    },
    "TermsOfPaymentApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameEnglish": {
          "type": "string"
        },
        "NumberOfDays": {
          "format": "int32",
          "type": "integer"
        },
        "TermsOfPaymentTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "TermsOfPaymentTypeText": {
          "type": "string"
        },
        "AvailableForSales": {
          "type": "boolean"
        },
        "AvailableForPurchase": {
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[DeliveryMethodApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[DeliveryMethodApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/DeliveryMethodApi"
          }
        }
      }
    },
    "DeliveryMethodApi": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[DeliveryTermApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[DeliveryTermApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/DeliveryTermApi"
          }
        }
      }
    },
    "DeliveryTermApi": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[DocumentApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "DocumentApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "NameWithoutExtension": {
          "type": "string"
        },
        "Size": {
          "format": "int32",
          "description": "Calculated in bytes",
          "type": "integer"
        },
        "Type": {
          "format": "int32",
          "description": "0 = SupplierInvoiceDraftAttachment, 1 = SupplierInvoiceAttachment, 2 = SupplierInvoiceXml,\r\n10 = CustomerInvoiceXml, 11 = CustomerInvoicePdf, 12 = CustomerInvoicePaymentReminderPdf,\r\n13 = CompanyLogo, 14 = DocumentBackgroundPdf, 20 = PhotoReceipt, 21 = PhotoSupplierInvoice,\r\n30 = AutoInvoiceAssembly, 40 = FinvoiceReceiverInfoXml, 41 = VatReportPdf",
          "enum": [
            0,
            1,
            2,
            10,
            11,
            12,
            13,
            14,
            20,
            21,
            30,
            40,
            41
          ],
          "type": "integer"
        },
        "TemporaryUrl": {
          "description": "This is a temporary url that will expire and should not be stored.",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[FiscalYearApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[FiscalYearApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/FiscalYearApi"
          }
        }
      }
    },
    "FiscalYearApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsLockedForAccounting": {
          "description": "Read-only",
          "type": "boolean"
        },
        "BookkeepingMethod": {
          "format": "int32",
          "description": "Read-only: When posting fiscalyear, previous years bookkeeping method is chosen. 0 = Invoicing, 1 = Cash, 2 = NoBookkeeping",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      }
    },
    "ODataQueryOptions[OpeningBalancesApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[OpeningBalancesApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/OpeningBalancesApi"
          }
        }
      }
    },
    "OpeningBalancesApi": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Number": {
          "format": "int64",
          "type": "integer"
        },
        "Balance": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ODataQueryOptions[ForeignPaymentCodesAPI]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[ForeignPaymentCodesAPI]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ForeignPaymentCodesAPI"
          }
        }
      }
    },
    "ForeignPaymentCodesAPI": {
      "type": "object",
      "properties": {
        "Code": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[MessageThreadApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "MessageThreadApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16
          ],
          "type": "integer"
        },
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Read-Only",
          "type": "string"
        },
        "Subject": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "IsClosed": {
          "description": "Read-Only",
          "type": "boolean"
        },
        "MessageReceivers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/MessageReceiverApi"
          }
        }
      }
    },
    "MessageReceiverApi": {
      "required": [
        "UserId"
      ],
      "type": "object",
      "properties": {
        "UserId": {
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Read-Only",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "IsCurrentUser": {
          "description": "Read-Only",
          "type": "boolean"
        }
      }
    },
    "MessageApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "Text": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "CreatedByUserId": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "ModifiedByUserId": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "MessageThreadId": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        }
      }
    },
    "MessageStatusApi": {
      "required": [
        "Status"
      ],
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        }
      }
    },
    "MessageToPostApi": {
      "required": [
        "Message",
        "Subject",
        "DocumentType"
      ],
      "type": "object",
      "properties": {
        "Message": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "Subject": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "maximum": 16,
          "minimum": 0,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16
          ],
          "type": "integer"
        },
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "MessageReceivers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/MessageReceiverApi"
          }
        }
      }
    },
    "ODataQueryOptions[MessageApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "ODataQueryOptions[NoteApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "NoteApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "UserId": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "AttachedTo": {
          "format": "uuid",
          "description": "The document Id to which the note can be attached",
          "type": "string"
        },
        "Text": {
          "maxLength": 256,
          "minLength": 0,
          "type": "string"
        },
        "Subject": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "description": "The document type to which the note is attached \r\nNone = 0, CustomerInvoice = 1, CustomerInvoiceDraft = 2, SupplierInvoice = 3, Voucher = 4, Quotation = 5, Order = 6, SupplierInvoiceDraft = 7, WebshopOrder = 8, Customer = 9, Receipt = 10, Article = 11, VatReport = 12, Supplier = 13, Inventory = 14, Employee = 15, Payslip = 16",
          "maximum": 16,
          "minimum": 0,
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16
          ],
          "type": "integer"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "IsDone": {
          "description": "Read-Only",
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[OrderApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[OrderApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/OrderApi"
          }
        }
      }
    },
    "OrderApi": {
      "required": [
        "Amount",
        "CustomerId",
        "CurrencyCode",
        "VatAmount",
        "RoundingsAmount",
        "InvoiceCity",
        "InvoiceCountryCode",
        "InvoiceCustomerName",
        "InvoicePostalCode",
        "EuThirdParty",
        "CustomerIsPrivatePerson",
        "OrderDate",
        "Status",
        "RotReducedInvoicingType",
        "ReverseChargeOnConstructionServices"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "VatAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "RoundingsAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredVatAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveredRoundingsAmount": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryPostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCity": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "YourReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "OurReference": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddress2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "type": "string"
        },
        "InvoiceCountryCode": {
          "description": "Max length: 2 characters",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCustomerName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryMethodCode": {
          "description": "Max length: 50 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "DeliveryTermCode": {
          "description": "Max length: 50 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "EuThirdParty": {
          "type": "boolean"
        },
        "CustomerIsPrivatePerson": {
          "type": "boolean"
        },
        "OrderDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "1 = Draft, 2 = Ongoing, 3 = Shipped, 4 = Invoiced",
          "maximum": 4,
          "minimum": 1,
          "enum": [
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "Number": {
          "format": "int32",
          "type": "integer"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: null",
          "type": "string"
        },
        "HouseWorkAmount": {
          "format": "double",
          "type": "number"
        },
        "HouseWorkAutomaticDistribution": {
          "type": "boolean"
        },
        "HouseWorkCorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "HouseWorkPropertyName": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/OrderRowApi"
          }
        },
        "ShippedDateTime": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: null",
          "type": "string"
        },
        "RotReducedInvoicingType": {
          "format": "int32",
          "description": "0 = None, 1 = Rot, 2 = Rut",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "RotPropertyType": {
          "format": "int32",
          "type": "integer"
        },
        "Persons": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SalesDocumentRotRutReductionPersonApi"
          }
        },
        "ReverseChargeOnConstructionServices": {
          "type": "boolean"
        }
      }
    },
    "OrderRowApi": {
      "required": [
        "LineNumber",
        "IsTextRow",
        "IsWorkCost",
        "EligibleForReverseChargeOnVat"
      ],
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "maximum": 1000,
          "minimum": 0,
          "type": "integer"
        },
        "DeliveredQuantity": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "ArticleId": {
          "format": "uuid",
          "type": "string"
        },
        "ArticleNumber": {
          "description": "Max length: 40 characters",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "IsTextRow": {
          "type": "boolean"
        },
        "Text": {
          "description": "Max length: 2000 characters",
          "maxLength": 2000,
          "minLength": 0,
          "type": "string"
        },
        "UnitPrice": {
          "format": "double",
          "description": "Format: 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DiscountPercentage": {
          "format": "double",
          "description": "Format: 4 decimals",
          "maximum": 1,
          "minimum": 0,
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: 4 decimals",
          "pattern": "[-]?\\d+(.\\d{1,4})?",
          "type": "number"
        },
        "WorkCostType": {
          "format": "int32",
          "type": "integer"
        },
        "IsWorkCost": {
          "type": "boolean"
        },
        "EligibleForReverseChargeOnVat": {
          "type": "boolean"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters",
          "type": "string"
        },
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[PartnerResourceLinkApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[PartnerResourceLinkApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/PartnerResourceLinkApi"
          }
        }
      }
    },
    "PartnerResourceLinkApi": {
      "required": [
        "ResourceId",
        "ResourceType",
        "Href",
        "PartnerCompanyName",
        "PartnerSystemName"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Id provided by eAccounting",
          "type": "string"
        },
        "ResourceId": {
          "format": "uuid",
          "description": "Purpose: Link to the resource in eAccounting",
          "type": "string"
        },
        "ResourceType": {
          "format": "int32",
          "description": "0 = Article, 1 = Customer, 2 = Supplier, 3 = CustomerInvoice, 4 = SupplierInvoice,\r\n5 = CustomerInvoiceDraft, 6 = SupplierInvoiceDraft",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "Href": {
          "description": "Link to the third party solution page",
          "type": "string"
        },
        "PartnerCompanyName": {
          "type": "string"
        },
        "PartnerSystemName": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[ProjectApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[ProjectApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ProjectApi"
          }
        }
      }
    },
    "ProjectApi": {
      "required": [
        "Number",
        "Name",
        "StartDate"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Number": {
          "description": "Max length: 9 characters",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "CustomerId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerName": {
          "description": "Read-only: CustomerName depending on CustomerId",
          "type": "string"
        },
        "Notes": {
          "description": "Max length: 500 characters",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "1 = Ongoing, 2 = Finished",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-only: Is automatically set",
          "type": "string"
        }
      }
    },
    "SalesDocumentAttachmentUploadApi": {
      "required": [
        "ContentType",
        "FileName",
        "DockumentId"
      ],
      "type": "object",
      "properties": {
        "ContentType": {
          "description": "= ['application\/pdf']",
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "DockumentId": {
          "format": "uuid",
          "type": "string"
        },
        "Data": {
          "description": "Format: Must be Base64 encoded byte array.",
          "type": "string"
        },
        "Url": {
          "description": "Must be public URL",
          "type": "string"
        }
      }
    },
    "SalesDocumentAttachmentApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4
          ],
          "type": "integer"
        },
        "OriginalFilename": {
          "type": "string"
        },
        "DocumentSize": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Thumbnail": {
          "format": "byte",
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[SupplierInvoiceDraftApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[SupplierInvoiceDraftApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SupplierInvoiceDraftApi"
          }
        }
      }
    },
    "SupplierInvoiceDraftApi": {
      "required": [
        "SupplierId",
        "IsCreditInvoice",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "SupplierId": {
          "format": "uuid",
          "description": "Source: Get from \/supplierlistitems",
          "type": "string"
        },
        "BankAccountId": {
          "format": "uuid",
          "description": "Source: Get from \/bankaccounts, if not provided the supplier bank account will be used.",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Today's date",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Date based on the suppliers Terms of payment",
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Vat": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatHigh": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatMedium": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatLow": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "description": "Purpose: If currency code is domestic and currency rate isn't included it will be fetched from eAccounting",
          "type": "number"
        },
        "OcrNumber": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "Message": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SupplierInvoiceDraftRowApi"
          }
        },
        "SupplierName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SupplierNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        },
        "IsQuickInvoice": {
          "type": "boolean"
        },
        "IsDomestic": {
          "type": "boolean"
        },
        "ApprovalStatus": {
          "format": "int32",
          "description": "0 = None, 1 = Approved, 2 = Rejected, 3 = ReadyForApproval",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "AllocationPeriods": {
          "description": "Read-only: Post to \/supplierinvoicedrafts\/{supplierInvoiceDraftId}\/allocationperiods\/",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AllocationPeriodApi"
          }
        },
        "Attachments": {
          "$ref": "#\/definitions\/AttachmentLinkApi"
        }
      }
    },
    "SupplierInvoiceDraftRowApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "AccountName": {
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "description": "Purpose: Returns the Vat code id from the provided account number",
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from \/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from \/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from \/costcenters",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "DebitAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "TransactionText": {
          "type": "string"
        },
        "LineNumber": {
          "format": "int32",
          "description": "Default: 1",
          "type": "integer"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "integer"
        }
      }
    },
    "SupplierInvoiceDraft": {
      "required": [
        "SupplierId",
        "IsCreditInvoice",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "SupplierId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/supplierlistitems",
          "type": "string"
        },
        "BankAccountId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/bankaccounts",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Today's date",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Date based on the suppliers Terms of payment",
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Vat": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatHigh": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatMedium": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "VatLow": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "description": "Purpose: If currency code is domestic and currency rate isn't included it will be fetched from eAccounting",
          "type": "number"
        },
        "OcrNumber": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "Message": {
          "description": "Max length: 25 characters",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SupplierInvoiceDraftRow"
          }
        },
        "SupplierName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SupplierNumber": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        },
        "AllocationPeriods": {
          "description": "Read-only: Post to \/v1\/supplierinvoicedrafts\/{supplierInvoiceDraftId}\/allocationperiods\/",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AllocationPeriod"
          }
        },
        "Attachments": {
          "$ref": "#\/definitions\/AttachmentLink"
        }
      }
    },
    "SupplierInvoiceDraftRow": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "VatCodeId": {
          "format": "uuid",
          "description": "Purpose: Returns the Vat code id from the provided account number",
          "type": "string"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/costcenters",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/costcenters",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/costcenters",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "description": "Format: Max 2 decimals\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD\r\nPurpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "description": "Purpose: This feature is for dutch companies only which enabled agriculture support",
          "type": "integer"
        },
        "DebetAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "LineNumber": {
          "format": "int32",
          "description": "Default: 1",
          "type": "integer"
        },
        "TransactionText": {
          "description": "Max length: 100 characters",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "AllocationPeriod": {
      "required": [
        "SupplierInvoiceId",
        "SupplierInvoiceRowLine",
        "Rows"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceId": {
          "format": "uuid",
          "type": "string"
        },
        "SupplierInvoiceRowLine": {
          "format": "int32",
          "type": "integer"
        },
        "AllocationPeriodSourceType": {
          "format": "int32",
          "enum": [
            0,
            1
          ],
          "type": "integer",
          "readOnly": true
        },
        "Status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "type": "string"
        },
        "ProjectId": {
          "format": "uuid",
          "type": "string"
        },
        "BookkeepingDate": {
          "format": "date-time",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AllocationPeriodRow"
          }
        },
        "DebitAccountNumber": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "CreditAccountNumber": {
          "format": "int64",
          "type": "integer",
          "readOnly": true
        },
        "Amount": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "AttachmentLink": {
      "required": [
        "DocumentType",
        "AttachmentIds"
      ],
      "type": "object",
      "properties": {
        "DocumentId": {
          "format": "uuid",
          "type": "string"
        },
        "DocumentType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "type": "integer"
        },
        "AttachmentIds": {
          "description": "Source: Get from \/v1\/attachments.",
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "AllocationPeriodRow": {
      "required": [
        "AccountNumber",
        "Amount",
        "DebitCredit"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "AllocationPeriodId": {
          "format": "uuid",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "DebitCredit": {
          "format": "int32",
          "enum": [
            1,
            2
          ],
          "type": "integer"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ODataQueryOptions[SupplierInvoiceApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[SupplierInvoiceApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SupplierInvoiceApi"
          }
        }
      }
    },
    "SupplierInvoiceApi": {
      "required": [
        "SupplierId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: This is automatically generated by eAccounting upon creation",
          "type": "string"
        },
        "SupplierId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/suppliers.",
          "type": "string"
        },
        "BankAccountId": {
          "format": "uuid",
          "description": "Read-Only",
          "type": "string"
        },
        "InvoiceDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "Read-Only",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Format: YYYY-MM-DD. Default: Date based on the supplier's terms of payment",
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "TotalAmount": {
          "format": "double",
          "type": "number"
        },
        "Vat": {
          "format": "double",
          "type": "number"
        },
        "VatHigh": {
          "format": "double",
          "description": "Only for Norway",
          "type": "number"
        },
        "VatMedium": {
          "format": "double",
          "description": "Only for Norway",
          "type": "number"
        },
        "VatLow": {
          "format": "double",
          "description": "Only for Norway",
          "type": "number"
        },
        "IsCreditInvoice": {
          "type": "boolean"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "OcrNumber": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Read-only",
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "description": "Read-only",
          "type": "string"
        },
        "PlusGiroNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "BankGiroNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SupplierInvoiceRowApi"
          }
        },
        "SupplierName": {
          "description": "Read-only",
          "type": "string"
        },
        "SupplierNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "IsQuickInvoice": {
          "description": "Read-only",
          "type": "boolean"
        },
        "IsDomestic": {
          "description": "Read-only",
          "type": "boolean"
        },
        "RemainingAmount": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "RemainingAmountInvoiceCurrency": {
          "format": "double",
          "description": "Read-only",
          "type": "number"
        },
        "VoucherNumber": {
          "description": "Read-only",
          "type": "string"
        },
        "VoucherId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "CreatedFromDraftId": {
          "format": "uuid",
          "description": "Read-only",
          "type": "string"
        },
        "SelfEmployedWithoutFixedAddress": {
          "description": "Read-only",
          "type": "boolean"
        },
        "AllocationPeriods": {
          "description": "Read-only. For create use POST \/v2\/allocationperiods",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/AllocationPeriodApi"
          }
        },
        "AutoCreditDebitPairing": {
          "type": "boolean"
        },
        "Attachments": {
          "type": "array",
          "items": {
            "format": "uuid",
            "type": "string"
          }
        }
      }
    },
    "SupplierInvoiceRowApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: This is automatically generated by eAccounting upon creation",
          "type": "string"
        },
        "AccountNumber": {
          "format": "int64",
          "type": "integer"
        },
        "AccountName": {
          "description": "Read-only",
          "type": "string"
        },
        "VatCodeId": {
          "format": "uuid",
          "description": "Only for Denmark and Netherlands",
          "type": "string"
        },
        "VatAmount": {
          "format": "double",
          "description": "Only for Denmark and Netherlands",
          "type": "number"
        },
        "CostCenterItemId1": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters.",
          "type": "string"
        },
        "CostCenterItemId2": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters.",
          "type": "string"
        },
        "CostCenterItemId3": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/costcenters.",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "Weight": {
          "format": "double",
          "type": "number"
        },
        "DeliveryDate": {
          "format": "date-time",
          "type": "string"
        },
        "HarvestYear": {
          "format": "int32",
          "type": "integer"
        },
        "DebetAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "description": "Format: Max 2 decimals",
          "pattern": "[-]?\\d+(.\\d{1,2})?",
          "type": "number"
        },
        "LineNumber": {
          "format": "int32",
          "description": "Read-only",
          "type": "integer"
        },
        "ProjectId": {
          "format": "uuid",
          "description": "Source: Get from \/v2\/projects.",
          "type": "string"
        },
        "TransactionText": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[SupplierApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[SupplierApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/SupplierApi"
          }
        }
      }
    },
    "SupplierApi": {
      "required": [
        "Name",
        "TermsOfPaymentId",
        "UsesPaymentReferenceNumbers"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "SupplierNumber": {
          "description": "Max length: 16 characters. Purpose: Unique identifier. If not provided, eAccounting will provide one",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "Address1": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Address2": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "AutomaticPaymentService": {
          "description": "Purpose: SE only. Indicates if the supplier is paid by an automatic payment service. Supplier invoices to such suppliers will not be sent to the bank via the bank integration\r\nDefault value: false",
          "type": "boolean"
        },
        "BankAccountNumber": {
          "description": "Max length: 50 characters. Purpose: Only used in norwegian and danish eAccounting for domestic payments",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "BankBban": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with Bank Code (SupplierBankCode)\r\nFormat NO: 11 characters, Format DK: 11-14 characters",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z0-9]{1,35}$",
          "type": "string"
        },
        "BankBic": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with IBAN (SupplierBankIban)\r\nFormat: 6 letters followed by 2 or 5 characters (total length 8 or 11)",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z]{6}([a-zA-z0-9]{2}|[a-zA-z0-9]{5})$",
          "type": "string"
        },
        "BankCode": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with BBAN (SupplierBankBban)\r\nFormat: 2 letters followed by at least 3 characters",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^([a-zA-Z]{2})[a-zA-Z0-9]{3,}$",
          "type": "string"
        },
        "BankCountryCode": {
          "description": "Max length: 2 characters. Default value: Country of the supplier",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "BankgiroNumber": {
          "description": "Max length: 10 characters. Purpose: Only used in swedish eAccounting, for swedish suppliers",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "BankIban": {
          "description": "Purpose: Used on foreign payments to identify a bankaccount together with BIC (SupplierBankBic)\r\nFormat: 2 letters for country code, 2 control digits, 3 characters for bank identification",
          "maxLength": 50,
          "minLength": 0,
          "pattern": "^[a-zA-Z]{2}[0-9]{2}[a-zA-z0-9]{1,}$",
          "type": "string"
        },
        "BankName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonEmail": {
          "description": "Max length: 225 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonMobile": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonName": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ContactPersonPhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdentityNumber": {
          "description": "Max length: 20 characters",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "CreatedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "Max length: 3 characters. Default value: Currency of the user company",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "EmailAddress": {
          "description": "Max length: 225 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "MobilePhone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ModifiedUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Name": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Note": {
          "description": "Max length: 400 characters",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "PlusgiroNumber": {
          "description": "Max length: 10 characters. Purpose: Only used in swedish eAccounting, for swedish suppliers",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "Max length: 10 characters",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Telephone": {
          "description": "Max length: 50 characters",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "TermsOfPaymentId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/termsofpayment",
          "type": "string"
        },
        "WwwAddress": {
          "description": "Max length: 255 characters",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "BankFeeCode": {
          "format": "int32",
          "description": "Purpose: Used for foreign payments to determine which party that pays for aditional bank fees",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        },
        "PayFromBankAccountId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/bankaccounts. Purpose: Used for foreign payments to determine which bankaccount the payment will be from",
          "type": "string"
        },
        "ForeignPaymentCodeId": {
          "format": "uuid",
          "description": "Source: Get from \/v1\/foreignpaymentcodes. Purpose: Used for categorization of foreign purchases (NO and SE only).",
          "type": "string"
        },
        "UsesPaymentReferenceNumbers": {
          "description": "Purpose: Used if the supplier uses payment reference numbers. (OCR, KID etc.)",
          "type": "boolean"
        },
        "IsActive": {
          "description": "Default: true",
          "type": "boolean"
        },
        "SelfEmployedWithoutFixedAddress": {
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[TermsOfPaymentApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[TermsOfPaymentApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/TermsOfPaymentApi"
          }
        }
      }
    },
    "ODataQueryOptions[UnitApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[UnitApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/UnitApi"
          }
        }
      }
    },
    "UnitApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Abbreviation": {
          "type": "string"
        }
      }
    },
    "ODataQueryOptions[UserApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[UserApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/UserApi"
          }
        }
      }
    },
    "UserApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsCurrentUser": {
          "type": "boolean"
        },
        "IsConsultant": {
          "type": "boolean"
        }
      }
    },
    "ODataQueryOptions[VatCodeApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "VatCode": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "Read-only: Unique Id provided by eAccounting",
          "type": "string"
        },
        "Code": {
          "description": "Returns the VAT code",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "VatRate": {
          "format": "double",
          "type": "number"
        },
        "RelatedAccounts": {
          "$ref": "#\/definitions\/RelatedAccounts"
        }
      }
    },
    "RelatedAccounts": {
      "type": "object",
      "properties": {
        "AccountNumber1": {
          "format": "int64",
          "type": "integer"
        },
        "AccountNumber2": {
          "format": "int64",
          "type": "integer"
        },
        "AccountNumber3": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ODataQueryOptions[VatReportApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[VatReportApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/VatReportApi"
          }
        }
      }
    },
    "ODataQueryOptions[VoucherApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[VoucherApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/VoucherApi"
          }
        }
      }
    },
    "ODataQueryOptions[WebshopOrderApi]": {
      "type": "object",
      "properties": {
        "IfMatch": {
          "type": "object",
          "readOnly": true
        },
        "IfNoneMatch": {
          "type": "object",
          "readOnly": true
        },
        "Context": {
          "$ref": "#\/definitions\/ODataQueryContext",
          "readOnly": true
        },
        "Request": {
          "type": "object",
          "readOnly": true
        },
        "RawValues": {
          "$ref": "#\/definitions\/ODataRawQueryOptions",
          "readOnly": true
        },
        "SelectExpand": {
          "$ref": "#\/definitions\/SelectExpandQueryOption",
          "readOnly": true
        },
        "Apply": {
          "$ref": "#\/definitions\/ApplyQueryOption",
          "readOnly": true
        },
        "Filter": {
          "$ref": "#\/definitions\/FilterQueryOption",
          "readOnly": true
        },
        "OrderBy": {
          "$ref": "#\/definitions\/OrderByQueryOption",
          "readOnly": true
        },
        "Skip": {
          "$ref": "#\/definitions\/SkipQueryOption",
          "readOnly": true
        },
        "Top": {
          "$ref": "#\/definitions\/TopQueryOption",
          "readOnly": true
        },
        "Count": {
          "$ref": "#\/definitions\/CountQueryOption",
          "readOnly": true
        },
        "Validator": {
          "$ref": "#\/definitions\/ODataQueryValidator"
        }
      }
    },
    "PaginatedResponse[WebshopOrderApi]": {
      "type": "object",
      "properties": {
        "Meta": {
          "$ref": "#\/definitions\/PaginationMetadata"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/WebshopOrderApi"
          }
        }
      }
    },
    "WebshopOrderApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "BaseCurrencyCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "OrderCurrencyCode": {
          "type": "string"
        },
        "OrderDate": {
          "format": "date-time",
          "type": "string"
        },
        "OrderNumber": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        },
        "TotalAmountBaseCurrency": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountOrderCurrency": {
          "format": "double",
          "type": "number"
        },
        "Rows": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/WebshopOrderRowApi"
          }
        }
      }
    },
    "WebshopOrderRowApi": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "ArticleName": {
          "type": "string"
        },
        "ArticleNumber": {
          "type": "string"
        },
        "PricePerUnitInvoiceCurrency": {
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "format": "double",
          "type": "number"
        },
        "UnitAbbreviation": {
          "type": "string"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        }
      }
    }
  }
}